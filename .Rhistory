abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[3], border=colours[2],
main=expression(paste('Histogram of ', delta)), xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', zeta)), xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', beta)), xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', delta)), xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', zeta)), xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', beta)), xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', delta)), xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', zeta)), xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', beta)), xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, line=-2, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[2], border=colours[2], xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', zeta)), xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', beta)), xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, line=-2, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', zeta)), xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', beta)), xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', alpha)), xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', Pi)), xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main=expression(paste('Histogram of ', rho)), xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, line=-2, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
# function for plotting posterior histograms
histogram_plot <- function(param, title){
par(mfrow=c(2,3))
hist(param[,1], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(delta))
abline(v=true_params[1], col=colours[3], lwd=2)
hist(param[,2], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(zeta))
abline(v=true_params[2], col=colours[3], lwd=2)
hist(param[,3], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(beta))
abline(v=true_params[3], col=colours[3], lwd=2)
hist(param[,4], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(alpha))
abline(v=true_params[4], col=colours[3], lwd=2)
hist(param[,5], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(Pi))
abline(v=true_params[5], col=colours[3], lwd=2)
hist(param[,6], breaks=10, col = colours[2], border=colours[2],
main='', xlab=expression(rho))
abline(v=true_params[6], col=colours[3], lwd=2)
mtext(title, line=-2, outer=TRUE)
}
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=4)
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=4)
for (i in 1:10){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.5), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.5), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3)
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:10){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.5), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.5), lwd=1)
}
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:10){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.5), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.5), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.5), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.5), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[1], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[1], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[4], 0.4), lwd=1)
}
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[1], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[5], 0.4), lwd=1)
}
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1)
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,2,2))
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='', ylim=c(0,550))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
par(mfrow=c(2,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time')
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time')
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:20){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
0.005*5000
par(mfrow=c(1,1))
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Accepted simulations from rejection ABC algorithm')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:225){
rej_epidemic <- simulate_zombies(ABC_rej$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
library(abc)
true_epidemic <- simulate_zombies(true_params)
plot(t, floor(true_epidemic[1:501]), ylim=c(0,500), type='l', col='blue', lwd=2)
plot(t, floor(true_epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=2)
lines(t, floor(true_epidemic[502:1002]), col=colours[3], lwd=2)
legend('topright', legend=c('Susceptibles', 'Zombies'), col = c('blue', 'red'), lty=1, lwd=2)
legend('topright', legend=c('Susceptibles', 'Zombies'), col = colours[2:3], lty=1, lwd=2)
ABC_rej$param
abc_rej <- abc(true_epidemic, ABC_rej$param, ABC_rej$stats, tol=0.005, method="rejection")
parnames <- c('delta', 'zeta', 'beta', 'alpha', 'pi', 'rho')
abc_rej <- abc(true_epidemic, ABC_rej$param, ABC_rej$stats, tol=0.005, method="rejection", parnames)
abc_rej <- abc(true_epidemic, ABC_rej$param, ABC_rej$stats, tol=0.005, method="rejection", names=parnames)
abc_rej <- abc(true_epidemic, c(ABC_rej$param, names=parnames), ABC_rej$stats, tol=0.005, method="rejection")
ABC_rej$param
colnames(ABC_rej$param) <- parnames
ABC_rej$param
abc_rej <- abc(true_epidemic, ABC_rej$param, ABC_rej$stats, tol=0.005, method="rejection")
abc_rej$unadj.values
abc_rej <- abc(true_epidemic, ABC_rej$param, ABC_rej$stats, tol=1, method="rejection")
abc_rej$unadj.values
abc_rej$ss
lines(t, apply(abc_rej$ss, 2, mean), col = colours[1], lwd=3)
abc_rej$ss[1]
abc_rej$ss[1:10]
dim(abc_rej$ss)
lines(t, apply(abc_rej$ss[:,1:501], 2, mean), col = colours[1], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3)
polygon(c(t,rev(t)), c(apply(abc_rej$ss, 2, quantile, prob=0.05), rev(apply(abc_rej$ss, 2, quantile, prob= 0.95))), col=alpha(colours[2], 0.4), border = NA)
polygon(c(t,rev(t)), c(apply(abc_rej$s[1:501]s, 2, quantile, prob=0.05), rev(apply(abc_rej$ss[1:501], 2, quantile, prob= 0.95))), col=alpha(colours[2], 0.4), border = NA)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[1:501], 2, quantile, prob=0.05), rev(apply(abc_rej$ss[1:501], 2, quantile, prob= 0.95))), col=alpha(colours[2], 0.4), border = NA)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05), rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))), col=alpha(colours[2], 0.4), border = NA)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05), rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))), col=alpha(colours[1], 0.4), border = NA)
# plot confidence bands
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05), rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))), col=alpha(colours[1], 0.4), border = NA)
lines(t, floor(epidemic[1:501]), col=colours[2], lwd=3)
# plot confidence bands
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))),
col=alpha(colours[1], 0.2), border = NA)
lines(t, floor(epidemic[1:501]), col=colours[2], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3, lty=2)
# plot confidence bands
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))),
col=alpha(colours[1], 0.2), border = NA)
lines(t, floor(epidemic[1:501]), col=colours[2], lwd=3)
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))),
col=alpha(colours[1], 0.3), border = NA)
lines(t, floor(epidemic[1:501]), col=colours[2], lwd=3)
lines(t, apply(abc_rej$ss[,502:], 2, mean), col = colours[4], lwd=3, lty=2)
lines(t, apply(abc_rej$ss[,502:1002], 2, mean), col = colours[4], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,502:1002], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,502:1002], 2, quantile, prob= 0.95))),
col=alpha(colours[4], 0.3), border = NA)
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))),
col=alpha(colours[1], 0.3), border = NA)
lines(t, apply(abc_rej$ss[,502:1002], 2, mean), col = colours[4], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,502:1002], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,502:1002], 2, quantile, prob= 0.95))),
col=alpha(colours[4], 0.3), border = NA)
plot(t, floor(epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main='Mean and confidence band from rejection ABC')
lines(t, floor(epidemic[502:1002]), col=colours[3], lwd=3)
lines(t, apply(abc_rej$ss[,1:501], 2, mean), col = colours[1], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,1:501], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,1:501], 2, quantile, prob= 0.95))),
col=alpha(colours[1], 0.25), border = NA)
lines(t, apply(abc_rej$ss[,502:1002], 2, mean), col = colours[4], lwd=3, lty=2)
polygon(c(t,rev(t)), c(apply(abc_rej$ss[,502:1002], 2, quantile, prob=0.05),
rev(apply(abc_rej$ss[,502:1002], 2, quantile, prob= 0.95))),
col=alpha(colours[4], 0.25), border = NA)
abc_rej$epsilon
ABC_rej$epsilon
source('plotting_functions.R')
histogram_plot(ABC_rej$param, 'Posterior distributions from Rejection ABC')
## Plot accepted sampled trajectories
plot_trajectories <- function(true_epidemic, ABC_output, title){
par(mfrow=c(1,1))
plot(t, floor(true_epidemic[1:501]), ylim=c(0,500), type='l', col=colours[2], lwd=3,
ylab='Population Values', xlab='Time', main=title)
lines(t, floor(true_epidemic[502:1002]), col=colours[3], lwd=3)
for (i in 1:225){
rej_epidemic <- simulate_zombies(ABC_output$param[i,])
lines(t, floor(rej_epidemic[1:501]), col=alpha(colours[2], 0.4), lwd=1)
lines(t, floor(rej_epidemic[502:1002]), col=alpha(colours[3], 0.4), lwd=1)
}
legend('topright', legend = c('True Susceptibles', 'True Zombies',
'Simulated Susceptibles', 'Simulated Zombies'),
col = c(colours[2], colours[3], alpha(colours[2], 0.4), alpha(colours[3], 0.4)),
lty=1, lwd=c(3,3,1,1))
}
# Plot accepted sampled trajectories
plot_trajectories(true_epidemic, ABC_rej, title='Accepted simulations from rejection ABC algorithm')
source('plotting_functions.R')
